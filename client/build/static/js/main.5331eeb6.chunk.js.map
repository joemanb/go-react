{"version":3,"sources":["components/Movies.js","components/Admin.js","components/Home.js","components/OneMovie.js","components/Genres.js","components/OneGenre.js","components/form-components/Input.js","components/form-components/Select.js","components/form-components/TextArea.js","components/ui-components/Alert.js","components/EditMovie.js","components/Login.js","components/GraphQL.js","components/OneMovieGraphQL.js","App.js","index.js"],"names":["Movies","state","movies","isLoaded","error","fetch","process","then","response","status","err","Error","message","setState","json","this","className","map","m","to","id","title","Component","Admin","props","jwt","history","push","pathname","Home","OneMovie","movie","match","params","genres","Object","values","year","mpaa_rating","index","description","runtime","Genres","genreName","genre_name","OneGenre","location","Input","htmlFor","name","type","value","onChange","handleChange","placeholder","errorDiv","errorMsg","Select","options","option","label","TextArea","rows","Alert","alertType","role","alertMessage","EditMovie","handleSubmit","evt","preventDefault","errors","length","data","FormData","target","payload","fromEntries","entries","myHeaders","Headers","append","requestOptions","method","body","JSON","stringify","headers","alert","prevState","confirmDelete","e","confirmAlert","buttons","onClick","release_date","rating","mpaaOptions","bind","key","indexOf","releaseDate","Date","toISOString","split","onSubmit","hasError","href","Login","email","password","console","log","handleJWTChange","window","localStorage","setItem","GraphQL","searchTerm","performSearch","search","theList","list","slice","OneMovieGraphQL","poster","src","alt","App","logout","removeItem","t","getItem","parse","loginLink","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5331eeb6.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          movies: json.movies,\n          isLoaded: true,\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Choose a movie</h2>\n\n          <div className=\"list-group\">\n\n            {movies.map((m) => (\n\n              <Link key={m.id} to={`/movies/${m.id}`} className=\"list-group-item list-group-item-action\">{m.title}</Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Admin extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    if (this.props.jwt === \"\") {\n      this.props.history.push({\n          pathname: \"/login\",\n      });\n      return;\n  }\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          movies: json.movies,\n          isLoaded: true,\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Manage Catalogue</h2>\n\n          <div className=\"list-group\">\n\n            {movies.map((m) => (\n\n              <Link key={m.id} to={`/admin/movie/${m.id}`} className=\"list-group-item list-group-item-action\">{m.title}</Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './Home.css';\n\nexport default class Home extends Component {\n\n    render() {\n        return (\n            <div className='text-center'>\n                <h2>This is the home page</h2>\n                <hr/> \n                <div className='tickets'></div>\n            </div>\n        );\n    }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovie extends Component {\n  state = { movie: {}, isLoaded: false, error: null };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movie: json.movie,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movie, isLoaded, error } = this.state;\n    if (movie.genres) {\n        movie.genres = Object.values(movie.genres);\n    } else {\n        movie.genres = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>\n            Movie: {movie.title} ({movie.year})\n          </h2>\n\n            <div className=\"float-start\">\n                <small>Rating: {movie.mpaa_rating}</small>\n            </div>\n            <div className=\"float-end\">\n                {movie.genres.map((m, index) =>(\n                    <span className=\"badge bg-secondary me-1\" key={index}>\n                        {m}\n                    </span>\n                ))}\n            </div>\n            <div className=\"clearfix\"></div>\n\n            <hr />\n\n          <table className=\"table table-compact table-striped\">\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Title:</strong>\n                </td>\n                <td>{movie.title}</td>\n              </tr>\n              <tr>\n                  <td><strong>Description:</strong></td>\n                  <td>{movie.description}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Run time:</strong>\n                </td>\n                <td>{movie.runtime} minutes</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Genres extends Component {\n\n  state = {\n    genres: [],\n    isLoaded: false,\n    error: null,\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/genres`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          genres: json.genres,\n          isLoaded: true,\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { genres, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genres</h2>\n\n          <div className=\"list-groups\">\n            {genres.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={{\n                  pathname: `/genre/${m.id}`,\n                  genreName: m.genre_name,\n                }}\n              >\n                {m.genre_name}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      )\n    }\n  }\n}","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class OneGenre extends Component {\n  state = {\n    movies: {},\n    isLoaded: false,\n    error: null,\n    genreName: \"\"\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          movies: json.movies,\n          isLoaded: true,\n          genreName: this.props.location.genreName,\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    let { movies, isLoaded, error, genreName } = this.state;\n\n    if (!movies) {\n      movies = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genre: {genreName}</h2>\n\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link to={`/movies/${m.id}`} className=\"list-group-item list-group-item-action\">{m.title}</Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n\n}","const Input = (props) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={props.name} className=\"form-label\">\n                {props.title}\n            </label>\n            <input\n                type={props.type}\n                className={`form-control ${props.className}`}\n                id={props.name}\n                name={props.name}\n                value={props.value}\n                onChange={props.handleChange}\n                placeholder={props.placeholder}>\n            </input>\n\n            <div className={props.errorDiv}>{props.errorMsg}</div>\n        </div>\n    );\n}\n\nexport default Input;","const Select = (props) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={props.name} className=\"form-label\">\n                {\" \"}\n                {props.title}{\" \"}\n            </label>\n            <select className=\"form-select\"\n                name={props.name}\n                value={props.value}\n                onChange={props.handleChange}>\n\n                <option value=\"\">{props.placeholder}</option>\n                {props.options.map((option) => {\n                    return (\n                        <option\n                            className=\"form-select\"\n                            key={option.id}\n                            value={option.value}\n                            label={option.value}>\n                            {option.value}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport default Select;","const TextArea = (props) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={props.name} className=\"form-label\">\n                {props.title}\n            </label>\n            <textarea\n                className=\"form-control\"\n                id={props.name}\n                name={props.name}\n                value={props.value}\n                rows={props.rows}\n                onChange={props.handleChange}\n                placeholder={props.placeholder}\n            />\n        </div>\n    );\n}\n\nexport default TextArea","const Alert = (props) => {\n    return (\n        <div className={`alert ${props.alertType}`} role=\"alert\">\n        {props.alertMessage}\n        </div>\n    );\n}\n\nexport default Alert","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport './EditMovie.css';\nimport Input from './form-components/Input';\nimport Select from './form-components/Select';\nimport TextArea from './form-components/TextArea';\nimport Alert from './ui-components/Alert';\n\n\nexport default class EditMovie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            movie: {\n                id: 0,\n                title: \"\",\n                release_date: \"\",\n                runtime: \"\",\n                mpaa_rating: \"\",\n                rating: \"\",\n                description: \"\",\n            },\n            mpaaOptions: [\n                { id: \"G\", value: \"G\" },\n                { id: \"PG\", value: \"PG\" },\n                { id: \"PG-13\", value: \"PG-13\" },\n                { id: \"R\", value: \"R\" },\n                { id: \"NC17\", value: \"NC17\" },\n            ],\n            isLoaded: false,\n            error: null,\n            errors: [],\n            alert: {\n                type: \"d-none\",\n                message: \"\",\n            },\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        // client side validation\n        let errors = [];\n        if (this.state.movie.title === \"\") {\n            errors.push(\"title\");\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        if (errors.length > 0) {\n            return false;\n        }\n\n        const data = new FormData(evt.target);\n        const payload = Object.fromEntries(data.entries());\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", \"Bearer \" + this.props.jwt);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(payload),\n            headers: myHeaders,\n        }\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/admin/editmovie`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.error) {\n                    this.setState({\n                        alert: { type: \"alert-danger\", message: data.error.message },\n                    })\n                } else {\n                    this.props.history.push({\n                        pathname: \"/admin\",\n                    });\n                }\n            })\n    };\n\n    handleChange = (evt) => {\n        let value = evt.target.value;\n        let name = evt.target.name;\n\n        this.setState((prevState) => ({\n            movie: {\n                ...prevState.movie,\n                [name]: value,\n            }\n        }))\n    }\n\n    hasError(key) {\n        return this.state.errors.indexOf(key) !== -1;\n    }\n\n    componentDidMount() {\n        if (this.props.jwt === \"\") {\n            this.props.history.push({\n                pathname: \"/login\",\n            });\n            return;\n        }\n\n        const id = this.props.match.params.id;\n        if (id > 0) {\n            fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + id)\n                .then((response) => {\n                    if (response.status !== \"200\") {\n                        let err = Error;\n                        err.message = \"Invalid response code: \" + response.status;\n                        this.setState({ error: err });\n                    }\n\n                    return response.json();\n                })\n                .then((json) => {\n                    const releaseDate = new Date(json.movie.release_date);\n                    this.setState(\n                        {\n                            movie: {\n                                id: id,\n                                title: json.movie.title,\n                                release_date: releaseDate.toISOString().split(\"T\")[0],\n                                runtime: json.movie.runtime,\n                                mpaa_rating: json.movie.mpaa_rating,\n                                rating: json.movie.rating,\n                                description: json.movie.description,\n                            },\n                            isLoaded: true,\n\n                        }, (error) => {\n                            this.setState({\n                                isLoaded: true,\n                                error,\n                            })\n                        })\n                })\n        } else {\n            this.setState({\n                isLoaded: true\n            });\n        }\n    }\n\n    confirmDelete = (e) => {\n        confirmAlert({\n            title: 'Delete Movie?',\n            message: 'Are you sure?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        const myHeaders = new Headers();\n                        myHeaders.append(\"Content-Type\", \"application/json\");\n                        myHeaders.append(\"Authorization\", \"Bearer \" + this.props.jwt);\n\n                        fetch(`${process.env.REACT_APP_API_URL}/v1/admin/deletemovie/` + this.state.movie.id,\n                            {\n                                method: \"GET\",\n                                headers: myHeaders\n                            }\n                        )\n                            .then(response => response.json)\n                            .then(data => {\n                                if (data.err) {\n                                    this.setState({\n                                        alert: { type: \"alert-danger\", message: data.error.message }\n                                    })\n                                } else {\n                                    this.props.history.push({\n                                        pathname: \"/admin\",\n                                    })\n                                }\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: () => alert('Click No')\n                }\n            ]\n        });\n    }\n\n    render() {\n        let { movie, isLoaded, error } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            return <p>Loading...</p>\n        } else {\n            return (\n                <Fragment>\n                    <h2>Add/Edit Movie</h2>\n                    <Alert\n                        alertType={this.state.alert.type}\n                        alertMessage={this.state.alert.message}\n                    />\n\n                    <hr />\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            type=\"hidden\"\n                            name=\"id\"\n                            id=\"id\"\n                            value={movie.id}\n                            onChange={this.handleChange} />\n\n                        <Input\n                            title={\"Title\"}\n                            className={this.hasError(\"title\") ? \"is-invalid\" : \"\"}\n                            type={\"text\"}\n                            name={\"title\"}\n                            value={movie.title}\n                            handleChange={this.handleChange}\n                            errorDiv={this.hasError(\"title\") ? \"text-danger\" : \"d-none\"}\n                            errorMsg={\"Please enter a title\"}\n                        />\n\n                        <Input\n                            title={\"Release Date\"}\n                            type={\"date\"}\n                            name={\"release_date\"}\n                            value={movie.release_date}\n                            handleChange={this.handleChange}\n                        />\n\n                        <Input\n                            title={\"Runtime\"}\n                            type={\"text\"}\n                            name={\"runtime\"}\n                            value={movie.runtime}\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            title={\"MPAA Rating\"}\n                            name={\"mpaa_rating\"}\n                            options={this.state.mpaaOptions}\n                            value={movie.mpaa_rating}\n                            handleChange={this.handleChange}\n                            placeholder={\"Choose...\"}\n                        />\n\n                        <Input\n                            title={\"Rating\"}\n                            type={\"text\"}\n                            name={\"rating\"}\n                            value={movie.rating}\n                            handleChange={this.handleChange}\n                        />\n\n                        <TextArea\n                            title={\"Description\"}\n                            name=\"description\"\n                            value={movie.description}\n                            rows={\"3\"}\n                            handleChange={this.handleChange}\n                        />\n\n                        <button className=\"btn btn-primary\">Save</button>\n                        <Link to=\"/admin\" className='btn btn-warning ms-3'>Cancel</Link>\n                        {movie.id > 0 && (\n                            <a href=\"#!\" onClick={() => this.confirmDelete()}\n                                className=\"btn btn-danger ms-3\">Delete</a>\n                        )}\n                    </form>\n\n                </Fragment>\n            )\n        }\n    }\n}","import React, { Component, Fragment } from \"react\";\nimport Input from \"./form-components/Input\";\nimport Alert from \"./ui-components/Alert\";\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: null,\n            errors: [],\n            alert: {\n                type: \"d-none\",\n                message: \"\",\n            },\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (evt) => {\n        let value = evt.target.value;\n        let name = evt.target.name;\n        this.setState((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }))\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        let errors = [];\n\n        if (this.state.email === \"\") {\n            errors.push(\"email\");\n        }\n\n\n        if (this.state.password === \"\") {\n            errors.push(\"password\");\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        if (errors.length > 0) {\n            return false;\n        }\n\n\n        const data = new FormData(evt.target);\n        const payload = Object.fromEntries(data.entries());\n\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(payload),\n        }\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/signin`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.error) {\n                    console.log(\"wtf\")\n                    this.setState({\n                        alert: {\n                            type: \"alert-danger\",\n                            message: data.error.message,\n                        }\n                    })\n                } else {\n                    this.handleJWTChange(Object.values(data)[0]);\n                    window.localStorage.setItem(\"jwt\", JSON.stringify(Object.values(data)[0]));\n                    this.props.history.push({\n                        pathname: \"/admin\"\n                    })\n                }\n            })\n    }\n\n    handleJWTChange(jwt) {\n        this.props.handleJWTChange(jwt);\n    }\n\n    hasError(key) {\n        return this.state.errors.indexOf(key) !== -1;\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h2>Login</h2>\n                <hr />\n                <Alert alertType={this.state.alert.type} alertMessage={this.state.alert.message} />\n\n                <form className=\"pt-3\" onSubmit={this.handleSubmit}>\n                    <Input\n                        title={\"Email\"}\n                        type={\"email\"}\n                        name={\"email\"}\n                        handleChange={this.handleChange}\n                        className={this.hasError(\"email\") ? \"is-invalid\" : \"\"}\n                        errorDiv={this.hasError(\"email\") ? \"text-danger\" : \"d-none\"}\n                        errorMsg={\"Please enter a valid email address\"}\n                    />\n                    <Input\n                        title={\"Password\"}\n                        type={\"password\"}\n                        name={\"password\"}\n                        handleChange={this.handleChange}\n                        className={this.hasError(\"password\") ? \"is-invalid\" : \"\"}\n                        errorDiv={this.hasError(\"password\") ? \"text-danger\" : \"d-none\"}\n                        errorMsg={\"Please enter a password\"}\n                    />\n\n                    <hr />\n\n                    <button className=\"btn btn-primary\">Login</button>\n                </form>\n\n            </Fragment>\n        );\n    }\n}","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Input from './form-components/Input';\n\nexport default class GraphQL extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            movies: [],\n            isLoaded: false,\n            error: null,\n            alert: {\n                type: \"d-none\",\n                message: \"\",\n            },\n            searchTerm: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = (evt) => {\n        let value = evt.target.value;\n\n        this.setState(\n            (prevState) => ({\n                searchTerm: value,\n            })\n        )\n\n        if (value.length > 2) {\n\n            this.performSearch();\n        } else {\n            this.setState({movies: []});  \n        }\n    }\n\n    performSearch() {\n        const payload = `\n\n        {\n            search(titleContains: \"${this.state.searchTerm}\") {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: \"POST\",\n            body: payload,\n            headers: myHeaders,\n        }\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                let theList = Object.values(data.data.search);\n                return theList\n            })\n            .then((theList) => {\n                console.log(theList);\n                if (theList.length > 0) {\n                    this.setState({\n                        movies: theList,\n                    })\n                } else {\n                    this.setState({\n                        movies: [],\n                    })\n                }\n            })\n    }\n\n    componentDidMount() {\n        const payload = `\n\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: \"POST\",\n            body: payload,\n            headers: myHeaders,\n        }\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                let theList = Object.values(data.data.list);\n                return theList\n            })\n            .then((theList) => {\n                console.log(theList);\n                this.setState({\n                    movies: theList,\n                })\n            })\n    }\n\n    render() {\n        let { movies } = this.state;\n        return (\n            <Fragment>\n                <h2>GraphQL</h2>\n                <hr />\n\n                <Input \n                    title={\"Search\"}\n                    type={\"text\"}\n                    name={\"search\"}\n                    value={this.state.searchTerm}\n                    handleChange={this.handleChange}\n                />\n                <div className='list-group'>{movies.map((m) => (\n                    <Link\n                        key={m.id}\n                        className='list-group-item list-group-item-action'\n                        to={`/moviesgraphql/${m.id}`}\n                    >\n                        <strong>{m.title}</strong><br/>\n                        <small className='text-muted'>\n                            ({m.year}) - {m.runtime} minutes\n                        </small>\n                        <br/>\n                        {m.description.slice(0, 100)}...\n                    </Link>\n                ))}</div>\n            </Fragment>\n        )\n    }\n}","import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovieGraphQL extends Component {\n    state = { movie: {}, isLoaded: false, error: null };\n\n    componentDidMount() {\n\n        const payload = `\n\n    {\n        movie(id: ${this.props.match.params.id}) {\n            id\n            title\n            runtime\n            year\n            description\n            release_date\n            rating\n            mpaa_rating\n            poster\n        }\n    }\n    `\n\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: \"POST\",\n            body: payload,\n            headers: myHeaders,\n        }\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({\n                    movie: data.data.movie,\n                    isLoaded: true\n                })\n            })\n    }\n\n    render() {\n        const { movie, isLoaded, error } = this.state;\n        if (movie.genres) {\n            movie.genres = Object.values(movie.genres);\n        } else {\n            movie.genres = [];\n        }\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <p>Loading...</p>;\n        } else {\n            return (\n                <Fragment>\n                    <h2>\n                        Movie: {movie.title} ({movie.year})\n                    </h2>\n\n                    {movie.poster !== \"\" &&\n                        <div>\n                            <img src={`https://image.tmdb.org/t/p/w200${movie.poster}`} alt=\"poster\" />\n                        </div>\n                    }\n\n                    <div className=\"float-start\">\n                        <small>Rating: {movie.mpaa_rating}</small>\n                    </div>\n                    <div className=\"float-end\">\n                        {movie.genres.map((m, index) => (\n                            <span className=\"badge bg-secondary me-1\" key={index}>\n                                {m}\n                            </span>\n                        ))}\n                    </div>\n                    <div className=\"clearfix\"></div>\n\n                    <hr />\n\n                    <table className=\"table table-compact table-striped\">\n                        <thead></thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <strong>Title:</strong>\n                                </td>\n                                <td>{movie.title}</td>\n                            </tr>\n                            <tr>\n                                <td><strong>Description:</strong></td>\n                                <td>{movie.description}</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <strong>Run time:</strong>\n                                </td>\n                                <td>{movie.runtime} minutes</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Fragment>\n            );\n        }\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Movies from './components/Movies';\nimport Admin from './components/Admin';\nimport Home from './components/Home';\nimport OneMovie from './components/OneMovie';\nimport Genres from './components/Genres';\nimport OneGenre from './components/OneGenre';\nimport EditMovie from './components/EditMovie';\nimport Login from './components/Login';\nimport GraphQL from './components/GraphQL';\nimport OneMovieGraphQL from './components/OneMovieGraphQL';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jwt: \"\",\n    }\n  }\n\n  handleJWTChange = (jwt) => {\n    this.setState({ jwt: jwt });\n  }\n\n  componentDidMount() {\n    let t = window.localStorage.getItem(\"jwt\");\n\n    if (t) {\n      if (this.state.jwt === \"\") {\n        this.setState({\n          jwt: JSON.parse(t)\n        });\n      }\n    }\n  }\n\n  logout = () => {\n    this.setState({ jwt: \"\" });\n    window.localStorage.removeItem(\"jwt\");\n  }\n\n  render() {\n\n    let loginLink;\n\n    if (this.state.jwt === \"\") {\n      loginLink = <Link to=\"/login\">Login</Link>\n    } else {\n      loginLink = <Link to=\"/logout\" onClick={this.logout}>Logout</Link>\n    }\n\n    return (\n      <Router>\n        <div className=\"container\">\n\n          <div className=\"row\">\n            <div className='col mt-3'>\n              <h1 className=\"mt-3\">\n                Go Watch a Movie!\n              </h1>\n            </div>\n            <div className='col mt-3 text-end'>\n              {loginLink}\n            </div>\n            <hr className=\"mb-3\"></hr>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <nav>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link to=\"/movies\">Movies</Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link to=\"/genres\">Genres</Link>\n                  </li>\n                  {this.state.jwt !== \"\" &&\n                    <Fragment>\n                      <li className=\"list-group-item\">\n                        <Link to=\"/admin/movie/0\">Add Movie</Link>\n                      </li>\n                      <li className=\"list-group-item\">\n                        <Link to=\"/admin\">Manage Catalogue</Link>\n                      </li>\n                    </Fragment>\n                  }\n                  <li className='list-group-item'>\n                    <Link to=\"/graphql\">GraphQL</Link>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n\n            <div className=\"col-md-10\">\n              <Switch>\n\n                <Route exact path=\"/graphql\">\n                  <GraphQL />\n                </Route>\n\n                <Route path=\"/movies/:id\" component={OneMovie} />\n                <Route path=\"/moviesgraphql/:id\" component={OneMovieGraphQL} />\n\n                <Route path=\"/movies\">\n                  <Movies />\n                </Route>\n\n                <Route path=\"/genre/:id\" component={OneGenre} />\n\n                <Route exact path=\"/genres\">\n                  <Genres />\n                </Route>\n\n                <Route exact path=\"/login\"\n                  component={(props) => <Login {...props} handleJWTChange={this.handleJWTChange} />} />\n\n\n                <Route exact path=\"/admin/movie/:id\" component={(props) => (\n                  <EditMovie {...props} jwt={this.state.jwt} />\n                )}\n                />\n\n                <Route\n                  path=\"/admin\"\n                  component={(props) => (\n                    <Admin {...props} jwt={this.state.props} />\n                  )}\n                />\n\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router >\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}